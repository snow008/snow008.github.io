<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>snow</title>
  
  <subtitle>渐行渐远</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://snow008.github.io/"/>
  <updated>2020-05-19T14:43:38.046Z</updated>
  <id>https://snow008.github.io/</id>
  
  <author>
    <name>混世魔王</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue vueCli4</title>
    <link href="https://snow008.github.io/posts/1519428015.html"/>
    <id>https://snow008.github.io/posts/1519428015.html</id>
    <published>2020-05-19T02:14:15.000Z</published>
    <updated>2020-05-19T14:43:38.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于vue-cli4搭建基本操作"><a href="#关于vue-cli4搭建基本操作" class="headerlink" title="关于vue-cli4搭建基本操作"></a>关于vue-cli4搭建基本操作</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vue -V                      #查看是否有全局安装脚手架</span><br><span class="line">npm install -g @vue&#x2F;cli     #全局安装vue-cli4</span><br><span class="line">vue create my-project       #初始化项目</span><br><span class="line">cd my-project               #进入项目目录</span><br><span class="line">npm run serve               #启动项目</span><br></pre></td></tr></table></figure><h2 id="总结-cli4相比cli3"><a href="#总结-cli4相比cli3" class="headerlink" title="总结 cli4相比cli3"></a>总结 cli4相比cli3</h2><blockquote><p>相同点 —— 根目录下都要手动创建 vue.config.js 文件<br>不同点，主要是router和store两个文件有点区<br>cli3 裸露的两个文件 store.js，跟router.js<br>vue-cli4更适合拓展模块，cli3的vuex在一个store.js文件中，代码过多，显的臃肿<br>现在文件目录结构清晰，更方便后面的模块拓展</p></blockquote><h1 id="官方参考（多阅读官方手册）"><a href="#官方参考（多阅读官方手册）" class="headerlink" title="官方参考（多阅读官方手册）"></a>官方参考（多阅读官方手册）</h1><pre><code>[cli参见官网][1]         [cli全局配置][2]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于vue-cli4搭建基本操作&quot;&gt;&lt;a href=&quot;#关于vue-cli4搭建基本操作&quot; class=&quot;headerlink&quot; title=&quot;关于vue-cli4搭建基本操作&quot;&gt;&lt;/a&gt;关于vue-cli4搭建基本操作&lt;/h1&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
    
      <category term="前端" scheme="https://snow008.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://snow008.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>node</title>
    <link href="https://snow008.github.io/posts/2239752261.html"/>
    <id>https://snow008.github.io/posts/2239752261.html</id>
    <published>2020-05-14T14:10:50.000Z</published>
    <updated>2020-05-15T05:53:49.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nvm简单使用"><a href="#nvm简单使用" class="headerlink" title="nvm简单使用"></a>nvm简单使用</h1><blockquote><p>npm 从5.2版开始，增加了 npx 命令,直接使用 npx 命令<br>查看 npx -v ，没有信息就全局安装<br>npm install -g npx # 全局安装<br>npx 作用就是指在项目内调用模块<br>npx 避免全局安装的模块</p></blockquote><p><a href="http://www.ruanyifeng.com/blog/2019/02/npx.html" target="_blank" rel="noopener">更多信息查看</a></p><a id="more"></a><h1 id="node安装常见错误"><a href="#node安装常见错误" class="headerlink" title="node安装常见错误"></a>node安装常见错误</h1><ol><li>包安装没权限 （管理员身份运行cmd.exe）</li><li>有时候要注意包的版本问题</li></ol><p><a href="https://blog.csdn.net/qq_39629050/article/details/80863319" target="_blank" rel="noopener">解决方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nvm简单使用&quot;&gt;&lt;a href=&quot;#nvm简单使用&quot; class=&quot;headerlink&quot; title=&quot;nvm简单使用&quot;&gt;&lt;/a&gt;nvm简单使用&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;npm 从5.2版开始，增加了 npx 命令,直接使用 npx 命令&lt;br&gt;查看 npx -v ，没有信息就全局安装&lt;br&gt;npm install -g npx # 全局安装&lt;br&gt;npx 作用就是指在项目内调用模块&lt;br&gt;npx 避免全局安装的模块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2019/02/npx.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;更多信息查看&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="node" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/node/"/>
    
    
      <category term="node" scheme="https://snow008.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>gulp</title>
    <link href="https://snow008.github.io/posts/1287843722.html"/>
    <id>https://snow008.github.io/posts/1287843722.html</id>
    <published>2020-05-14T09:13:49.000Z</published>
    <updated>2020-05-15T05:53:57.551Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于gulp-4-的同步，异步执行任务"><a href="#关于gulp-4-的同步，异步执行任务" class="headerlink" title="关于gulp 4.* 的同步，异步执行任务"></a>关于gulp 4.* 的同步，异步执行任务</h1><blockquote><p>series 方法会按照顺序执行，即同步执行<br>parallel 方法胡同时执行，并行执行<br>它们的参数一定是gulp的task活动，返回stream</p></blockquote><p><a href="https://www.gulpjs.com.cn/" target="_blank" rel="noopener">gulp官方</a></p><a id="more"></a><h1 id="压缩js，css，html文件（其他类同）"><a href="#压缩js，css，html文件（其他类同）" class="headerlink" title="压缩js，css，html文件（其他类同）"></a>压缩js，css，html文件（其他类同）</h1><h2 id="要打包的文件根目录创建-gulpfile-js，以下内容写入"><a href="#要打包的文件根目录创建-gulpfile-js，以下内容写入" class="headerlink" title="要打包的文件根目录创建 gulpfile.js，以下内容写入"></a>要打包的文件根目录创建 gulpfile.js，以下内容写入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">var gulp &#x3D; require(&#39;gulp&#39;);</span><br><span class="line">var minifycss &#x3D; require(&#39;gulp-minify-css&#39;);&#x2F;&#x2F;压缩css</span><br><span class="line">var uglify &#x3D; require(&#39;gulp-uglify&#39;);&#x2F;&#x2F;压缩js</span><br><span class="line">var concat &#x3D; require(&#39;gulp-concat&#39;); &#x2F;&#x2F;合并文件</span><br><span class="line">var htmlmin &#x3D; require(&#39;gulp-htmlmin&#39;);&#x2F;&#x2F;压缩html</span><br><span class="line">&#x2F;&#x2F; var htmlclean &#x3D; require(&#39;gulp-htmlclean&#39;); &#x2F;&#x2F;清空html文件</span><br><span class="line">var  plumber&#x3D;require(&#39;gulp-plumber&#39;); &#x2F;&#x2F;检测错误</span><br><span class="line">var gutil&#x3D;require(&#39;gulp-util&#39;);&#x2F;&#x2F;如果有自定义方法，会用到</span><br><span class="line">var processhtml &#x3D; require(&#39;gulp-processhtml&#39;);</span><br><span class="line">var Replace &#x3D; require(&#39;gulp-replace&#39;);&#x2F;&#x2F;文件名替换</span><br><span class="line">var clean &#x3D; require(&#39;gulp-clean&#39;); &#x2F;&#x2F;删除文件、文件夹的插件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var date &#x3D; new Date().getTime();</span><br><span class="line"></span><br><span class="line">gulp.task(&#39;clean&#39;,function()&#123;</span><br><span class="line">    return gulp.src(&#39;min&#x2F;**&#39;,&#123;read:false&#125;)</span><br><span class="line">        .pipe(clean());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 控制台发声,错误时beep一下</span><br><span class="line">function errrHandler( e )&#123;  </span><br><span class="line">    gutil.beep();</span><br><span class="line">    gutil.log(e);</span><br><span class="line">    this.emit(&#39;end&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;压缩css</span><br><span class="line">gulp.task(&#39;mincss&#39;, function ()&#123;</span><br><span class="line">    &#x2F;&#x2F; return gulp.src(&#39;css&#x2F;*.css&#39;)</span><br><span class="line">    return gulp.src([&#39;css&#x2F;b.css&#39;,&#39;css&#x2F;a.css&#39;])&#x2F;&#x2F;按顺序压缩，也可使用插件 gulp-order</span><br><span class="line">        .pipe(concat(&#39;all.css&#39;))&#x2F;&#x2F;合成到一个css</span><br><span class="line">        .pipe(gulp.dest(&#39;min&#x2F;&#39;))&#x2F;&#x2F;输出到css目录</span><br><span class="line">        .pipe(minifycss())&#x2F;&#x2F;压缩css到一样</span><br><span class="line">        .pipe(concat(&#39;all.min.css&#39;))&#x2F;&#x2F;压缩后的css</span><br><span class="line">        .pipe(gulp.dest(&#39;min&#x2F;&#39;));&#x2F;&#x2F;输出到css目录</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 压缩js文件</span><br><span class="line">gulp.task(&#39;minjs&#39;, function() &#123;</span><br><span class="line">    return gulp.src([&#39;.&#x2F;js&#x2F;**&#x2F;*.js&#39;])</span><br><span class="line">        .pipe(concat(&#39;all.js&#39;))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&#39;min&#39;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 压缩html</span><br><span class="line">gulp.task(&#39;minhtml&#39;, function () &#123;</span><br><span class="line">    var options &#x3D; &#123;</span><br><span class="line">        removeComments: true,&#x2F;&#x2F;清除HTML注释</span><br><span class="line">        collapseWhitespace: true,&#x2F;&#x2F;压缩HTML</span><br><span class="line">        collapseBooleanAttributes: false,&#x2F;&#x2F;省略布尔属性的值 &lt;input checked&#x3D;&quot;true&quot;&#x2F;&gt; &#x3D;&#x3D;&gt; &lt;input &#x2F;&gt;</span><br><span class="line">        removeEmptyAttributes: false,&#x2F;&#x2F;删除所有空格作属性值 &lt;input id&#x3D;&quot;&quot; &#x2F;&gt; &#x3D;&#x3D;&gt; &lt;input &#x2F;&gt;</span><br><span class="line">        removeScriptTypeAttributes: true,&#x2F;&#x2F;删除&lt;script&gt;的type&#x3D;&quot;text&#x2F;javascript&quot;</span><br><span class="line">        removeStyleLinkTypeAttributes: true,&#x2F;&#x2F;删除&lt;style&gt;和&lt;link&gt;的type&#x3D;&quot;text&#x2F;css&quot;</span><br><span class="line">        minifyJS: true,&#x2F;&#x2F;压缩页面JS</span><br><span class="line">        minifyCSS: true&#x2F;&#x2F;压缩页面CSS</span><br><span class="line">    &#125;;</span><br><span class="line">    return gulp.src([&#39;.&#x2F;*.html&#39;])       </span><br><span class="line">        .pipe(plumber(&#123;errorHandler:errrHandler&#125;))     </span><br><span class="line">        .pipe(Replace(&#x2F;_VERSION_&#x2F;gi, date))</span><br><span class="line">        .pipe(processhtml())</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(&#39;min&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 生成目标html替换生成的html文件的js，css文件</span><br><span class="line"></span><br><span class="line">gulp.task(&#39;replacedev&#39;, function()&#123;</span><br><span class="line">    return gulp.src([&#39;min&#x2F;&#39;+&#39;*.html&#39;])</span><br><span class="line">        .pipe(Replace(&#39;common.js&#39;, &#39;all.js&#39;))</span><br><span class="line">        .pipe(Replace(&#39;common.css&#39;, &#39;all.css&#39;))</span><br><span class="line">        .pipe(gulp.dest(&#39;min&#x2F;&#39;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 默认任务 gulp 4.0 适用的方式</span><br><span class="line">gulp.task(&#39;default&#39;, gulp.series(&#39;clean&#39;,&#39;mincss&#39;,&#39;minjs&#39;,&#39;minhtml&#39;,&#39;replacedev&#39;));</span><br></pre></td></tr></table></figure><h2 id="运行gulp"><a href="#运行gulp" class="headerlink" title="运行gulp"></a>运行gulp</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp  #默认执行 gulp default</span><br></pre></td></tr></table></figure><h2 id="注意问题"><a href="#注意问题" class="headerlink" title="注意问题"></a>注意问题</h2><pre><code>1. task() 里面一定要写成返回值  return gulp.src（....）——返回值就符合steam2. 多个任务按顺序执行，使用 series() 方法 （很多错误原因是用parallel方法）</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于gulp-4-的同步，异步执行任务&quot;&gt;&lt;a href=&quot;#关于gulp-4-的同步，异步执行任务&quot; class=&quot;headerlink&quot; title=&quot;关于gulp 4.* 的同步，异步执行任务&quot;&gt;&lt;/a&gt;关于gulp 4.* 的同步，异步执行任务&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;series 方法会按照顺序执行，即同步执行&lt;br&gt;parallel 方法胡同时执行，并行执行&lt;br&gt;它们的参数一定是gulp的task活动，返回stream&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gulpjs.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gulp官方&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="gulp" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/gulp/"/>
    
    
      <category term="gulp" scheme="https://snow008.github.io/tags/gulp/"/>
    
      <category term="工具" scheme="https://snow008.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>linux httpd</title>
    <link href="https://snow008.github.io/posts/3481719661.html"/>
    <id>https://snow008.github.io/posts/3481719661.html</id>
    <published>2020-05-13T02:28:45.000Z</published>
    <updated>2020-05-13T02:49:26.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="apachectl-跟httpd区别"><a href="#apachectl-跟httpd区别" class="headerlink" title="apachectl 跟httpd区别"></a>apachectl 跟httpd区别</h1><blockquote><p>Apachectl =&gt;  Apache control 控制器(开，关，重启..)<br>httpd 是Apache的进程,可以有多个<br>apachectl 指令是apache http服务器的前端控制程序<br>协助控制apache服务的守护进程httpd</p></blockquote><a id="more"></a><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>启动apache httpd守护进程</td></tr><tr><td>restart</td><td>重启apache httpd守护进程</td></tr><tr><td>stop</td><td>停止apache httpd守护进程</td></tr><tr><td>status</td><td>显示apache服务的简要信息</td></tr><tr><td>graceful</td><td>优雅重启apache服务，和restart不一样，不会中断当前已经打开的http连接，不会立刻关闭日志</td></tr><tr><td>graceful-stop</td><td>优雅停止apache服务，和stop不一样，不会中断当前已经打开的http连接，不会立刻关闭日志</td></tr><tr><td>configtest</td><td>运行apache配置语法检测</td></tr></tbody></table><h1 id="安装apache一般有两种方式"><a href="#安装apache一般有两种方式" class="headerlink" title="安装apache一般有两种方式"></a>安装apache一般有两种方式</h1><h2 id="一、-yum安装"><a href="#一、-yum安装" class="headerlink" title="一、 yum安装"></a>一、 yum安装</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>/usr/sbin/apachectl</td><td>yum安装的apachectl启动位置</td></tr><tr><td>/usr/sbin/httpd</td><td>yum安装的httpd启动位置</td></tr><tr><td>cd /usr/sbin/</td><td>进入httpd启动文件目录</td></tr><tr><td>./httpd</td><td>启动当前httpd服务</td></tr><tr><td>./httpd -k stop</td><td>停止 httpd运行</td></tr><tr><td>cd /etc/httpd/logs/</td><td>进入日志目录</td></tr><tr><td>cat /etc/httpd/logs/error_log</td><td>查看错误日志</td></tr></tbody></table><h2 id="二、-手动安装apache2"><a href="#二、-手动安装apache2" class="headerlink" title="二、 手动安装apache2"></a>二、 手动安装apache2</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>/usr/local/Apache2/bin/Apachectl</td><td>手动启动Apachectl 程序</td></tr><tr><td>/usr/local/Apache2/bin/httpd</td><td>手动启动httpd程序</td></tr><tr><td>./usr/local/Apache2/bin/httpd</td><td>手动启动当前httpd服务</td></tr><tr><td>./usr/local/Apache2/bin/httpd -k stop</td><td>手动停止 httpd运行</td></tr><tr><td>cd /usr/local/apache2/logs</td><td>进入日志目录</td></tr><tr><td>cat /usr/local/apache2/logs/error_log</td><td>apache2 错误日志</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;apachectl-跟httpd区别&quot;&gt;&lt;a href=&quot;#apachectl-跟httpd区别&quot; class=&quot;headerlink&quot; title=&quot;apachectl 跟httpd区别&quot;&gt;&lt;/a&gt;apachectl 跟httpd区别&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Apachectl =&amp;gt;  Apache control 控制器(开，关，重启..)&lt;br&gt;httpd 是Apache的进程,可以有多个&lt;br&gt;apachectl 指令是apache http服务器的前端控制程序&lt;br&gt;协助控制apache服务的守护进程httpd&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="服务器" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="linux" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/linux/"/>
    
    
      <category term="linux" scheme="https://snow008.github.io/tags/linux/"/>
    
      <category term="httpd" scheme="https://snow008.github.io/tags/httpd/"/>
    
  </entry>
  
  <entry>
    <title>php tp搭建</title>
    <link href="https://snow008.github.io/posts/687102308.html"/>
    <id>https://snow008.github.io/posts/687102308.html</id>
    <published>2020-05-12T04:50:16.000Z</published>
    <updated>2020-05-12T14:40:36.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建thinkphp"><a href="#搭建thinkphp" class="headerlink" title="搭建thinkphp"></a>搭建thinkphp</h1><blockquote><p>git上下载的thinkphp5框架使用.gitignore没上传依赖,<br>需要通过composer进行下载依赖，使用composer install或者composer update即可解决</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install -vvv  #安装依赖，查看进度</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建thinkphp&quot;&gt;&lt;a href=&quot;#搭建thinkphp&quot; class=&quot;headerlink&quot; title=&quot;搭建thinkphp&quot;&gt;&lt;/a&gt;搭建thinkphp&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;git上下载的thinkphp5框架使用.giti
      
    
    </summary>
    
    
      <category term="服务器" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="php" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/php/"/>
    
    
      <category term="php" scheme="https://snow008.github.io/tags/php/"/>
    
      <category term="thinkphp" scheme="https://snow008.github.io/tags/thinkphp/"/>
    
  </entry>
  
  <entry>
    <title>linux 环境变量</title>
    <link href="https://snow008.github.io/posts/183057146.html"/>
    <id>https://snow008.github.io/posts/183057146.html</id>
    <published>2020-05-07T10:52:34.000Z</published>
    <updated>2020-05-12T03:28:23.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux-环境变量配置"><a href="#linux-环境变量配置" class="headerlink" title="linux 环境变量配置"></a>linux 环境变量配置</h1><pre><code>我们来看看执行的顺序：    1./etc/profile    2./etc/environment    3.~/.bash_profile    4.~/.bashrc    5./etc/bashrcsource ~/.bashrc #保存设置，立即生效</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux-环境变量配置&quot;&gt;&lt;a href=&quot;#linux-环境变量配置&quot; class=&quot;headerlink&quot; title=&quot;linux 环境变量配置&quot;&gt;&lt;/a&gt;linux 环境变量配置&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;我们来看看执行的顺序：
    1./etc
      
    
    </summary>
    
    
      <category term="服务端" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="linux" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/linux/"/>
    
    
      <category term="linux" scheme="https://snow008.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>nginx 源码安装</title>
    <link href="https://snow008.github.io/posts/1278193532.html"/>
    <id>https://snow008.github.io/posts/1278193532.html</id>
    <published>2020-05-05T08:31:19.000Z</published>
    <updated>2020-05-07T12:32:48.610Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.9.9.tar.gz  #安装 1.9.9</span><br><span class="line">tar xvf nginx-1.9.9.tar.gz -C &#x2F;usr&#x2F;local&#x2F;src       #解压到指定目录</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;nginx-1.9.9                       #进入解压的nginx目录</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx       #配置</span><br><span class="line">make &amp;&amp; make install                    #编译后执行</span><br></pre></td></tr></table></figure><h1 id="监测是否安装成功"><a href="#监测是否安装成功" class="headerlink" title="监测是否安装成功"></a>监测是否安装成功</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;     #进入安装目录</span><br><span class="line">.&#x2F;sbin&#x2F;nginx -t         #c出现以下说明安装ok</span><br><span class="line"></span><br><span class="line">nginx: the configuration file &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf test is successful</span><br></pre></td></tr></table></figure><ol><li><p>测试是否修改成功：<br> /usr/local/nginx/sbin/nginx -t</p></li><li><p>启动nginx<br> /usr/local/nginx/sbin/nginx</p></li><li><p>重新加载<br> /usr/local/nginx/sbin/nginx -s reload</p></li><li><p>错误日志<br> cat /usr/local/nginx/logs/error.log</p></li><li><p>配置目录<br> vim /usr/local/nginx/conf/nginx.conf</p></li><li><p>配置nginx开机自启动<br> vim /etc/rc.d/rc.local      #添加<br> /usr/local/nginx/sbin/nginx</p></li><li><p>配置环境变量（前提是你的nginx是要配置开机启动）</p><pre><code>vim /etc/profile #添加下面代码</code></pre></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一种：</span><br><span class="line">export NGINX_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">export PATH&#x3D;$PATH:$NGINX_HOME&#x2F;sbin</span><br><span class="line">第二种：</span><br><span class="line">echo &quot;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&quot; &gt; &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><ol start="8"><li>保存配置<br> source /etc/profile         #编译完保存配置<br> nginx -v                    #查看版本<br> ~/.bashrc里面加一句source /etc/profile</li><li>重启后 nginx -v 失效，需要source /etc/profile运行设置<br> 解决：<br> /root/.bashrc 里面加一句 source /etc/profile    </li></ol><h1 id="nginx-启动报错"><a href="#nginx-启动报错" class="headerlink" title="nginx 启动报错"></a>nginx 启动报错</h1><pre><code>问题 Nginx: [error] open() ＂/usr/local/Nginx/logs/Nginx.pid  解决：    /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf    使用nginx -c的参数指定nginx.conf文件的位置    cd /usr/local/nginx//logs/    ll  #nginx.pid文件已经有了</code></pre><h1 id="centOS版本自定义安装的nginx，配置启动文件"><a href="#centOS版本自定义安装的nginx，配置启动文件" class="headerlink" title="centOS版本自定义安装的nginx，配置启动文件"></a>centOS版本自定义安装的nginx，配置启动文件</h1><pre><code>[Unit]Description=nginxAfter=network.target[Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginx    #修改为自己系统对应的路径ExecReload=/usr/local/nginx/sbin/nginx -s reload #修改为自己系统对应的路径ExecStop=/usr/local/nginx/sbin/nginx -s quit    #修改为自己系统对应的路径PrivateTmp=true[Install]WantedBy=multi-user.target</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;源码安装&quot;&gt;&lt;a href=&quot;#源码安装&quot; class=&quot;headerlink&quot; title=&quot;源码安装&quot;&gt;&lt;/a&gt;源码安装&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="服务端" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="nginx" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
    
      <category term="nginx" scheme="https://snow008.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>git 基础</title>
    <link href="https://snow008.github.io/posts/1456454357.html"/>
    <id>https://snow008.github.io/posts/1456454357.html</id>
    <published>2020-04-23T05:57:56.000Z</published>
    <updated>2020-05-12T09:57:10.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-分支查看与切换"><a href="#git-分支查看与切换" class="headerlink" title="git 分支查看与切换"></a>git 分支查看与切换</h1><table><thead><tr><th>git指令</th><th>说明</th></tr></thead><tbody><tr><td>git branch -a</td><td>查看所有分支</td></tr><tr><td>git branch</td><td>查看当前使用分支(结果列表中前面标*号的表示当前使用分支)</td></tr><tr><td>git checkout 分支名</td><td>切换分支</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git-分支查看与切换&quot;&gt;&lt;a href=&quot;#git-分支查看与切换&quot; class=&quot;headerlink&quot; title=&quot;git 分支查看与切换&quot;&gt;&lt;/a&gt;git 分支查看与切换&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;git指令&lt;/th&gt;
&lt;
      
    
    </summary>
    
    
      <category term="运维" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="git" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/git/"/>
    
    
      <category term="git" scheme="https://snow008.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>svn 基础</title>
    <link href="https://snow008.github.io/posts/3528644641.html"/>
    <id>https://snow008.github.io/posts/3528644641.html</id>
    <published>2020-04-23T05:57:24.000Z</published>
    <updated>2020-05-07T13:57:36.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centOS安装svn服务器（serversvn）-并搭建http服务访问"><a href="#centOS安装svn服务器（serversvn）-并搭建http服务访问" class="headerlink" title="centOS安装svn服务器（serversvn）,并搭建http服务访问"></a>centOS安装svn服务器（serversvn）,并搭建http服务访问</h1><pre><code>理解：    必要技能        ——linux：系统        ——svn：版本管理库        ——httpd：apache2的版本别名        ——htpasswd：htpasswd 是开源 http 服务器 apache httpd 的一个命令工具，用于生成 http 基本认证的密码文件</code></pre><h2 id="linux系统安装svn"><a href="#linux系统安装svn" class="headerlink" title="linux系统安装svn"></a>linux系统安装svn</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install subversion      #使用yum默认安装</span><br><span class="line">svnserve --version          #查看svn版本</span><br></pre></td></tr></table></figure><h2 id="配置svn"><a href="#配置svn" class="headerlink" title="配置svn"></a>配置svn</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;var&#x2F;www&#x2F;svn      #创建版本库根目录</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;svn         #进入主目录</span><br><span class="line">svnadmin create &#x2F;var&#x2F;www&#x2F;svn&#x2F;test      #创建本地版本库</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;svn&#x2F;test    #进入版本库,</span><br><span class="line">ls                      #信息如下</span><br></pre></td></tr></table></figure><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>db</td><td>存放所有的版本控制数据文件</td></tr><tr><td>hooks</td><td>放置hook脚本文件</td></tr><tr><td>locks</td><td>用来追踪存取文件库的客户端</td></tr><tr><td>format</td><td>一个文本文件，文件中只包含一个整数，表示当前文件库配置的版本号</td></tr><tr><td>conf</td><td>SVN版本库的配置文件（版本库的访问账号、权限等）</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd conf      #进入配置账号，权限目录</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件目录</th><th>说明</th></tr></thead><tbody><tr><td>authz</td><td>设置用户,以及读写权限</td></tr><tr><td>passwd</td><td>设置用户密码</td></tr><tr><td>svnserve.conf</td><td>配置当前版本库(允许匿名用户，仓库：地址等)</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim passwd  #配置用户密码（注意，等号两侧需要一个空格）</span><br></pre></td></tr></table></figure><p><img data-src="/img/svn1.png" alt="密码"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim authz #配置用户读写权限</span><br></pre></td></tr></table></figure><p><img data-src="/img/svn2.png" alt="密码"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim svnserve.conf #修改当前版本库配置，如下（注意开始一行每空格，等号两边有空格）</span><br><span class="line"></span><br><span class="line">anon-access &#x3D; read #匿名用户可读，您也可以设置 anon-access &#x3D; none，不允许匿名用户访问。设置为 none，可以使日志日期正常显示</span><br><span class="line">auth-access &#x3D; write #授权用户可写</span><br><span class="line">password-db &#x3D; passwd #使用哪个文件作为账号文件</span><br><span class="line">authz-db &#x3D; authz #使用哪个文件作为权限文件</span><br><span class="line">realm &#x3D; &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow #认证空间名，版本库所在目录</span><br></pre></td></tr></table></figure><h2 id="启动版本库（默认端口是3609，记得添加到服务器的安全组）"><a href="#启动版本库（默认端口是3609，记得添加到服务器的安全组）" class="headerlink" title="启动版本库（默认端口是3609，记得添加到服务器的安全组）"></a>启动版本库（默认端口是3609，记得添加到服务器的安全组）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r &#x2F;var&#x2F;www&#x2F;svn&#x2F;    #启动svnserve版本库</span><br><span class="line">killall svnserve            #该命令可停止SVN服务</span><br><span class="line">ps -ef |grep svn            #查看svn服务开启</span><br><span class="line">netstat -antup | grep ftp   #查看端口</span><br><span class="line">svnserve -d -r &#x2F;var&#x2F;www&#x2F;svn --listen-port 9999 #设置别的端口</span><br></pre></td></tr></table></figure><h2 id="本地安装svn客户端连接svn库，我的库为test"><a href="#本地安装svn客户端连接svn库，我的库为test" class="headerlink" title="本地安装svn客户端连接svn库，我的库为test"></a>本地安装svn客户端连接svn库，我的库为test</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn:&#x2F;&#x2F;实例公网IP地址&#x2F;SVN版本库名</span><br><span class="line">svn:&#x2F;&#x2F;11:22:33:44:9999&#x2F;snow</span><br></pre></td></tr></table></figure><h1 id="http访问svn（假设已经装了httpd）——建议使用svn-hooks钩子脚本"><a href="#http访问svn（假设已经装了httpd）——建议使用svn-hooks钩子脚本" class="headerlink" title="http访问svn（假设已经装了httpd）——建议使用svn hooks钩子脚本"></a>http访问svn（假设已经装了httpd）——建议使用svn hooks钩子脚本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mod_dav_svn  #安装模块，这个模块可以让apache访问svn</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow&#x2F;conf   #进入仓库配置目录</span><br><span class="line">mv passwd passwd.default    #将svn用户密码文件passwd改成passwd.default</span><br><span class="line">htpasswd -cm passwd yourname    #用htpasswd命令创建加密文件，用户名为yourname</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><pre><code>1.authz的用户为yourname2.svnserve.conf配置文件修改 password-db = passwd.default3.htpasswd创建时会询问你设置密码4.passwd这个文件是页面访问的密码，passwd.default里面是客户端的svn密码</code></pre><h1 id="权限跟apache配置"><a href="#权限跟apache配置" class="headerlink" title="权限跟apache配置"></a>权限跟apache配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">chown -R apache:apache &#x2F;var&#x2F;www&#x2F;svn     #递归设置用户，用户组</span><br><span class="line">cd &#x2F;etc&#x2F;httpd&#x2F;conf.d    #进入httpd的配置目录</span><br><span class="line">touch svn.conf          #创建http访问svn的配置文件，基于mod_dav_svn模块</span><br><span class="line"></span><br><span class="line"># svn.conf 第一种 配置svn总仓库目录，并不是svn项目目录</span><br><span class="line">    &lt;Location &#x2F;snow&gt;</span><br><span class="line">        DAV svn</span><br><span class="line">        SVNParentPath &#x2F;var&#x2F;www&#x2F;svn</span><br><span class="line">        SVNListParentPath on</span><br><span class="line">        AuthType Basic</span><br><span class="line">        AuthName &quot;Authorization SVN&quot;</span><br><span class="line">        AuthzSVNAccessFile &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow&#x2F;conf&#x2F;authz</span><br><span class="line">        AuthUserFile &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow&#x2F;conf&#x2F;passwd</span><br><span class="line">        Require valid-user</span><br><span class="line">    &lt;&#x2F;Location&gt;</span><br><span class="line"># svn.conf 第二种 配置svn项目目录</span><br><span class="line">    &lt;Location &#x2F;snow&gt;</span><br><span class="line">        DAV svn</span><br><span class="line">        #SVNParentPath &#x2F;var&#x2F;www&#x2F;svn</span><br><span class="line">        SVNPath &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow</span><br><span class="line">        AuthType Basic</span><br><span class="line">        #SVNListParentPath on</span><br><span class="line">        AuthName &quot;Authorization SVN&quot;</span><br><span class="line">        AuthzSVNAccessFile &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow&#x2F;conf&#x2F;authz</span><br><span class="line">        AuthUserFile &#x2F;var&#x2F;www&#x2F;svn&#x2F;snow&#x2F;conf&#x2F;passwd</span><br><span class="line">        #Satisfy all</span><br><span class="line">        Require valid-user</span><br><span class="line">    &lt;&#x2F;Location&gt;</span><br></pre></td></tr></table></figure><h1 id="重启服务器，防火墙放行"><a href="#重启服务器，防火墙放行" class="headerlink" title="重启服务器，防火墙放行"></a>重启服务器，防火墙放行</h1><pre><code>systemctl enable httpdsystemctl start httpdfirewall-cmd --permanent --add-service=httpfirewall-cmd --reload访问地址 http://你的ip地址/snow,就可以看到效果</code></pre><h1 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h1><pre><code>find / -name mod_dav_svn.so     #查看模块位置find / -name mod_authz_svn.so   #查看模块位置cat  /etc/httpd/logs/error_log  #查看错误日志vim /etc/httpd/conf/httpd.conf  #修改apache配置,其他服务名，端口配置下1.修改配置，重启http服务    &lt;Directory /&gt;        AllowOverride none        #Require all denied        Require all granted    &lt;/Directory&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centOS安装svn服务器（serversvn）-并搭建http服务访问&quot;&gt;&lt;a href=&quot;#centOS安装svn服务器（serversvn）-并搭建http服务访问&quot; class=&quot;headerlink&quot; title=&quot;centOS安装svn服务器（ser
      
    
    </summary>
    
    
      <category term="运维" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="svn" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/svn/"/>
    
    
      <category term="svn" scheme="https://snow008.github.io/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>Jquery</title>
    <link href="https://snow008.github.io/posts/4255042143.html"/>
    <id>https://snow008.github.io/posts/4255042143.html</id>
    <published>2020-04-23T05:49:10.000Z</published>
    <updated>2020-04-23T05:53:49.091Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Jquery" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/Jquery/"/>
    
    
      <category term="Jquery" scheme="https://snow008.github.io/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>HTML</title>
    <link href="https://snow008.github.io/posts/787223889.html"/>
    <id>https://snow008.github.io/posts/787223889.html</id>
    <published>2020-04-23T05:48:44.000Z</published>
    <updated>2020-04-23T05:51:50.207Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="WEB基础" scheme="https://snow008.github.io/categories/WEB%E5%9F%BA%E7%A1%80/"/>
    
      <category term="HTML" scheme="https://snow008.github.io/categories/WEB%E5%9F%BA%E7%A1%80/HTML/"/>
    
    
      <category term="HTML" scheme="https://snow008.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>CSS</title>
    <link href="https://snow008.github.io/posts/3999917138.html"/>
    <id>https://snow008.github.io/posts/3999917138.html</id>
    <published>2020-04-23T05:48:26.000Z</published>
    <updated>2020-04-23T05:52:54.577Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="WEB基础" scheme="https://snow008.github.io/categories/WEB%E5%9F%BA%E7%A1%80/"/>
    
      <category term="CSS" scheme="https://snow008.github.io/categories/WEB%E5%9F%BA%E7%A1%80/CSS/"/>
    
    
      <category term="CSS" scheme="https://snow008.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>js</title>
    <link href="https://snow008.github.io/posts/3106780478.html"/>
    <id>https://snow008.github.io/posts/3106780478.html</id>
    <published>2020-04-23T05:48:12.000Z</published>
    <updated>2020-05-15T03:37:43.124Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/js/"/>
    
    
      <category term="js" scheme="https://snow008.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>ftp 操作</title>
    <link href="https://snow008.github.io/posts/3194002123.html"/>
    <id>https://snow008.github.io/posts/3194002123.html</id>
    <published>2020-04-23T05:29:59.000Z</published>
    <updated>2020-05-05T06:16:34.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ftp基本操作"><a href="#ftp基本操作" class="headerlink" title="ftp基本操作"></a>ftp基本操作</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ftp基本操作&quot;&gt;&lt;a href=&quot;#ftp基本操作&quot; class=&quot;headerlink&quot; title=&quot;ftp基本操作&quot;&gt;&lt;/a&gt;ftp基本操作&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="运维" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="ftp" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/ftp/"/>
    
    
      <category term="ftp" scheme="https://snow008.github.io/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>axios</title>
    <link href="https://snow008.github.io/posts/2694088402.html"/>
    <id>https://snow008.github.io/posts/2694088402.html</id>
    <published>2020-04-20T09:48:11.000Z</published>
    <updated>2020-04-23T05:47:00.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="axios代理服务器"><a href="#axios代理服务器" class="headerlink" title="axios代理服务器"></a>axios代理服务器</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;axios代理服务器&quot;&gt;&lt;a href=&quot;#axios代理服务器&quot; class=&quot;headerlink&quot; title=&quot;axios代理服务器&quot;&gt;&lt;/a&gt;axios代理服务器&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="运维" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="axios" scheme="https://snow008.github.io/categories/%E8%BF%90%E7%BB%B4/axios/"/>
    
    
      <category term="前端" scheme="https://snow008.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="axios" scheme="https://snow008.github.io/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>vue 数据监测</title>
    <link href="https://snow008.github.io/posts/533985533.html"/>
    <id>https://snow008.github.io/posts/533985533.html</id>
    <published>2020-04-20T09:00:31.000Z</published>
    <updated>2020-04-23T05:43:06.592Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-数据双向绑定"><a href="#vue-数据双向绑定" class="headerlink" title="vue 数据双向绑定"></a>vue 数据双向绑定</h1><p><a href="/posts/1988130116.html">可对比angular的脏检查</a></p><pre><code>Object.defineProperty 实现数据变动侦测</code></pre><p>region { 这是折叠区标题的头<br>这是折叠区中的文本<br>这还是折叠区中的文本<br>} region 这是折叠区标题的尾</p><p>｜       标题       ｜<br>｜==================｜<br>｜ 表头1  ｜ 表头2  ｜<br>｜:——-｜:——-｜<br>｜单元格1 ｜单元格2 ｜</p><p><a href="/">链接文字</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue-数据双向绑定&quot;&gt;&lt;a href=&quot;#vue-数据双向绑定&quot; class=&quot;headerlink&quot; title=&quot;vue 数据双向绑定&quot;&gt;&lt;/a&gt;vue 数据双向绑定&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;/posts/1988130116.html&quot;&gt;可对比an
      
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
    
      <category term="前端" scheme="https://snow008.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://snow008.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>angular</title>
    <link href="https://snow008.github.io/posts/1988130116.html"/>
    <id>https://snow008.github.io/posts/1988130116.html</id>
    <published>2020-04-20T08:47:33.000Z</published>
    <updated>2020-04-23T05:46:12.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="angular之脏检查"><a href="#angular之脏检查" class="headerlink" title="angular之脏检查"></a>angular之脏检查</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;angular之脏检查&quot;&gt;&lt;a href=&quot;#angular之脏检查&quot; class=&quot;headerlink&quot; title=&quot;angular之脏检查&quot;&gt;&lt;/a&gt;angular之脏检查&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="前端" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="angular" scheme="https://snow008.github.io/categories/%E5%89%8D%E7%AB%AF/angular/"/>
    
    
      <category term="前端" scheme="https://snow008.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="angular" scheme="https://snow008.github.io/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>linux</title>
    <link href="https://snow008.github.io/posts/2450605904.html"/>
    <id>https://snow008.github.io/posts/2450605904.html</id>
    <published>2020-04-19T13:49:50.000Z</published>
    <updated>2020-05-07T06:35:42.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux基础"><a href="#linux基础" class="headerlink" title="linux基础"></a>linux基础</h2><ol><li>基础指令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp   <span class="comment">#查看端口</span></span><br></pre></td></tr></table></figure>效果如下:</li></ol><p><img data-src="/img/pid.png" alt="端口"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 7198    <span class="comment">#最高权限关闭对应PID进程即httpd进程</span></span><br></pre></td></tr></table></figure><ol start="2"><li>linux文件,文件夹操作<ul><li>展示目录列表 ls (list)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls              <span class="comment">#展示当前目录下的可见文件</span></span><br><span class="line">ls -a           <span class="comment">#展示当前目录下所有的文件（包括隐藏）</span></span><br><span class="line">ls -l(ll)       <span class="comment">#展示当前目录下文件的详细信息</span></span><br><span class="line">ll -a           <span class="comment">#展示当前目录下所有文件的详细信息</span></span><br><span class="line">ll -h           <span class="comment">#友好显示当前目录下文件的详细信息（其实就是文件的大小可读性更好</span></span><br></pre></td></tr></table></figure></li><li>展示目录列表 cd (change directory)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span>     <span class="comment">#切换到test目录下</span></span><br><span class="line"><span class="built_in">cd</span> ..       <span class="comment">#切换到上一级目录</span></span><br><span class="line"><span class="built_in">cd</span> /        <span class="comment">#切换到系统根目录下</span></span><br><span class="line"><span class="built_in">cd</span> ~        <span class="comment">#切换到当前用户的根目录下</span></span><br><span class="line"><span class="built_in">cd</span> -        <span class="comment">#切换到上一级所在的目录</span></span><br></pre></td></tr></table></figure></li><li>目录的创建（mkdir）和删除（rmdir）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="built_in">test</span>        <span class="comment">#当前目录下创建test目录</span></span><br><span class="line">mkdir -p <span class="built_in">test</span>/a/b <span class="comment">#在test目录下的a目录下创建一个b目录，</span></span><br><span class="line">                  <span class="comment">#如果上一级目录不存在，则连它的父目录一起创建</span></span><br><span class="line">rmdir <span class="built_in">test</span>        <span class="comment">#删除当前目录下的test目录（注意：该命令只能够删除空目录）</span></span><br></pre></td></tr></table></figure></li><li>文件的创建（touch）和删除（rm）命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch test.txt    <span class="comment">#在当前目录下创建一个test.txt的文件</span></span><br><span class="line">rm test.txt       <span class="comment">#删除test.txt的文件（带询问的删除，需输入y才能删除）</span></span><br><span class="line">rm -f test.txt    <span class="comment">#直接删除text.txt文件（force 强制）</span></span><br><span class="line">rm -r <span class="built_in">test</span>        <span class="comment">#递归删除，即删除test目录以及其目录下的子目录（带询问的删除）</span></span><br><span class="line">rm -rf <span class="built_in">test</span>       <span class="comment">#直接删除test目录以及其目录下的子目录</span></span><br><span class="line">cat test.txt      <span class="comment">#查看当前目录test.txt文件</span></span><br></pre></td></tr></table></figure></li><li>复制文件 cf (copy file)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  cp  sourceFile  destinationFile   <span class="comment">#当sourceFile 和 destinationFile 参数都是文件名时，cp 命令将源文件内容复制到一个新文件，该新文件以destinatioFile命名。源文件内容不变。新文件有全新的从创建时间和修改时间</span></span><br><span class="line"><span class="comment">#注意：当 destinationFile 已存在时，一般 Linux 系统会提醒用户是否覆盖原有文件</span></span><br><span class="line"></span><br><span class="line">  mv passwd passwd.default</span><br><span class="line">  <span class="comment">#将passwd文件 更名为 passwd.default 内容不变，</span></span><br></pre></td></tr></table></figure><a id="more"></a></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;linux基础&quot;&gt;&lt;a href=&quot;#linux基础&quot; class=&quot;headerlink&quot; title=&quot;linux基础&quot;&gt;&lt;/a&gt;linux基础&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;基础指令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -lntp   &lt;span class=&quot;comment&quot;&gt;#查看端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/img/pid.png&quot; alt=&quot;端口&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;kill&lt;/span&gt; -9 7198    &lt;span class=&quot;comment&quot;&gt;#最高权限关闭对应PID进程即httpd进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;linux文件,文件夹操作&lt;ul&gt;
&lt;li&gt;展示目录列表 ls (list)&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls              &lt;span class=&quot;comment&quot;&gt;#展示当前目录下的可见文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls -a           &lt;span class=&quot;comment&quot;&gt;#展示当前目录下所有的文件（包括隐藏）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls -l(ll)       &lt;span class=&quot;comment&quot;&gt;#展示当前目录下文件的详细信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll -a           &lt;span class=&quot;comment&quot;&gt;#展示当前目录下所有文件的详细信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ll -h           &lt;span class=&quot;comment&quot;&gt;#友好显示当前目录下文件的详细信息（其实就是文件的大小可读性更好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;展示目录列表 cd (change directory)&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;#切换到test目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..       &lt;span class=&quot;comment&quot;&gt;#切换到上一级目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /        &lt;span class=&quot;comment&quot;&gt;#切换到系统根目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~        &lt;span class=&quot;comment&quot;&gt;#切换到当前用户的根目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; -        &lt;span class=&quot;comment&quot;&gt;#切换到上一级所在的目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;目录的创建（mkdir）和删除（rmdir）&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;#当前目录下创建test目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/a/b &lt;span class=&quot;comment&quot;&gt;#在test目录下的a目录下创建一个b目录，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;comment&quot;&gt;#如果上一级目录不存在，则连它的父目录一起创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rmdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;#删除当前目录下的test目录（注意：该命令只能够删除空目录）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;文件的创建（touch）和删除（rm）命令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch test.txt    &lt;span class=&quot;comment&quot;&gt;#在当前目录下创建一个test.txt的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm test.txt       &lt;span class=&quot;comment&quot;&gt;#删除test.txt的文件（带询问的删除，需输入y才能删除）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -f test.txt    &lt;span class=&quot;comment&quot;&gt;#直接删除text.txt文件（force 强制）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -r &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;#递归删除，即删除test目录以及其目录下的子目录（带询问的删除）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;#直接删除test目录以及其目录下的子目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat test.txt      &lt;span class=&quot;comment&quot;&gt;#查看当前目录test.txt文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;复制文件 cf (copy file)&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  cp  sourceFile  destinationFile   &lt;span class=&quot;comment&quot;&gt;#当sourceFile 和 destinationFile 参数都是文件名时，cp 命令将源文件内容复制到一个新文件，该新文件以destinatioFile命名。源文件内容不变。新文件有全新的从创建时间和修改时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#注意：当 destinationFile 已存在时，一般 Linux 系统会提醒用户是否覆盖原有文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mv passwd passwd.default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#将passwd文件 更名为 passwd.default 内容不变，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务端" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="linux" scheme="https://snow008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/linux/"/>
    
    
      <category term="linux" scheme="https://snow008.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>snow</title>
    <link href="https://snow008.github.io/posts/914597299.html"/>
    <id>https://snow008.github.io/posts/914597299.html</id>
    <published>2020-04-10T13:30:40.000Z</published>
    <updated>2020-05-03T14:24:33.285Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="37d07ae0d22214035449612df8f71dc4eff19211a6c1fbaf6606264fc4790df2">eeb8ea072df15d23c8012e9e276ada2080edd847b600a636fba09a66100a2b772ea4df13da00216321da0fbd3b8bae7e834511154f8ff15f86e13dd810fd999544c66ee0913fbb432bace5d58b8433b8176e1eb7a3d90f99ed56529a9b5b5aed31631b8dc5792d7c961c620a4e376530</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      简单数字密码
    
    </summary>
    
    
    
      <category term="个人" scheme="https://snow008.github.io/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://snow008.github.io/posts/1243066710.html"/>
    <id>https://snow008.github.io/posts/1243066710.html</id>
    <published>2020-04-08T09:12:56.860Z</published>
    <updated>2020-05-04T13:10:43.051Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="工具" scheme="https://snow008.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="hexo" scheme="https://snow008.github.io/categories/%E5%B7%A5%E5%85%B7/hexo/"/>
    
    
      <category term="hexo" scheme="https://snow008.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
